[
    {
        "repo_url": "demo_repo",
        "commit_hash": "c_py_2",
        "filepath": "file_py_2.py",
        "before_code": "def vulnerable_code(): eval('1')",
        "after_code": "def secure_code(): pass",
        "language": "python",
        "commit_message": "Security fix CVE-2023-9999",
        "parsing_successful": true,
        "before_ast_str": "...",
        "after_ast_str": "...",
        "code": "def vulnerable_code(): eval('1')",
        "ast_str": "Module(\n    body=[\n        FunctionDef(\n            name='vulnerable_code',\n            args=arguments(\n                posonlyargs=[],\n                args=[],\n                kwonlyargs=[],\n                kw_defaults=[],\n                defaults=[]),\n            body=[\n                Expr(\n                    value=Call(\n                        func=Name(id='eval', ctx=Load()),\n                        args=[\n                            Constant(value='1')],\n                        keywords=[]))],\n            decorator_list=[])],\n    type_ignores=[])",
        "label": 1
    },
    {
        "repo_url": "demo_repo",
        "commit_hash": "c_java_1",
        "filepath": "file_java_1.java",
        "before_code": "public class Buggy {\n    public void method() {\n        int a = 0;\n    }\n}",
        "after_code": "public class Buggy {\n    public void method() {\n        int a = 1;\n    }\n}",
        "language": "java",
        "commit_message": "Fix java null ptr",
        "parsing_successful": true,
        "before_ast_str": "...",
        "after_ast_str": "...",
        "code": "public class Buggy {\n    public void method() {\n        int a = 0;\n    }\n}",
        "ast_str": "{\n    \"node_type\": \"CompilationUnit\",\n    \"imports\": [],\n    \"types\": [\n        {\n            \"node_type\": \"ClassDeclaration\",\n            \"modifiers\": [\n                \"public\"\n            ],\n            \"annotations\": [],\n            \"name\": \"Buggy\",\n            \"body\": [\n                {\n                    \"node_type\": \"MethodDeclaration\",\n                    \"modifiers\": [\n                        \"public\"\n                    ],\n                    \"annotations\": [],\n                    \"name\": \"method\",\n                    \"parameters\": [],\n                    \"body\": [\n                        {\n                            \"node_type\": \"LocalVariableDeclaration\",\n                            \"modifiers\": [],\n                            \"annotations\": [],\n                            \"type\": {\n                                \"node_type\": \"BasicType\",\n                                \"name\": \"int\",\n                                \"dimensions\": []\n                            },\n                            \"declarators\": [\n                                {\n                                    \"node_type\": \"VariableDeclarator\",\n                                    \"name\": \"a\",\n                                    \"dimensions\": [],\n                                    \"initializer\": {\n                                        \"node_type\": \"Literal\",\n                                        \"prefix_operators\": [],\n                                        \"postfix_operators\": [],\n                                        \"selectors\": [],\n                                        \"value\": \"0\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}",
        "label": 1
    },
    {
        "repo_url": "demo_repo",
        "commit_hash": "c_java_1",
        "filepath": "file_java_1.java",
        "before_code": "public class Buggy {\n    public void method() {\n        int a = 0;\n    }\n}",
        "after_code": "public class Buggy {\n    public void method() {\n        int a = 1;\n    }\n}",
        "language": "java",
        "commit_message": "Fix java null ptr",
        "parsing_successful": true,
        "before_ast_str": "...",
        "after_ast_str": "...",
        "code": "public class Buggy {\n    public void method() {\n        int a = 1;\n    }\n}",
        "ast_str": "{\n    \"node_type\": \"CompilationUnit\",\n    \"imports\": [],\n    \"types\": [\n        {\n            \"node_type\": \"ClassDeclaration\",\n            \"modifiers\": [\n                \"public\"\n            ],\n            \"annotations\": [],\n            \"name\": \"Buggy\",\n            \"body\": [\n                {\n                    \"node_type\": \"MethodDeclaration\",\n                    \"modifiers\": [\n                        \"public\"\n                    ],\n                    \"annotations\": [],\n                    \"name\": \"method\",\n                    \"parameters\": [],\n                    \"body\": [\n                        {\n                            \"node_type\": \"LocalVariableDeclaration\",\n                            \"modifiers\": [],\n                            \"annotations\": [],\n                            \"type\": {\n                                \"node_type\": \"BasicType\",\n                                \"name\": \"int\",\n                                \"dimensions\": []\n                            },\n                            \"declarators\": [\n                                {\n                                    \"node_type\": \"VariableDeclarator\",\n                                    \"name\": \"a\",\n                                    \"dimensions\": [],\n                                    \"initializer\": {\n                                        \"node_type\": \"Literal\",\n                                        \"prefix_operators\": [],\n                                        \"postfix_operators\": [],\n                                        \"selectors\": [],\n                                        \"value\": \"1\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}",
        "label": 0
    },
    {
        "repo_url": "demo_repo",
        "commit_hash": "c_py_2",
        "filepath": "file_py_2.py",
        "before_code": "def vulnerable_code(): eval('1')",
        "after_code": "def secure_code(): pass",
        "language": "python",
        "commit_message": "Security fix CVE-2023-9999",
        "parsing_successful": true,
        "before_ast_str": "...",
        "after_ast_str": "...",
        "code": "def secure_code(): pass",
        "ast_str": "Module(\n    body=[\n        FunctionDef(\n            name='secure_code',\n            args=arguments(\n                posonlyargs=[],\n                args=[],\n                kwonlyargs=[],\n                kw_defaults=[],\n                defaults=[]),\n            body=[\n                Pass()],\n            decorator_list=[])],\n    type_ignores=[])",
        "label": 0
    },
    {
        "repo_url": "demo_repo",
        "commit_hash": "c_py_1",
        "filepath": "file_py_1.py",
        "before_code": "def old_py(x):\n    return x - 1 #bug",
        "after_code": "def new_py(x):\n    return x + 1",
        "language": "python",
        "commit_message": "Fix py logic",
        "parsing_successful": true,
        "before_ast_str": "...",
        "after_ast_str": "...",
        "code": "def new_py(x):\n    return x + 1",
        "ast_str": "Module(\n    body=[\n        FunctionDef(\n            name='new_py',\n            args=arguments(\n                posonlyargs=[],\n                args=[\n                    arg(arg='x')],\n                kwonlyargs=[],\n                kw_defaults=[],\n                defaults=[]),\n            body=[\n                Return(\n                    value=BinOp(\n                        left=Name(id='x', ctx=Load()),\n                        op=Add(),\n                        right=Constant(value=1)))],\n            decorator_list=[])],\n    type_ignores=[])",
        "label": 0
    }
]